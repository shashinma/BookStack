@use "mixins";
@use "vars";

/**
 * Card-style blocks
 */

.card {
  @include mixins.lightDark(background-color, #FFF, #222);
  box-shadow: vars.$bs-card;
  border-radius: 3px;
  break-inside: avoid;
  .body, p.empty-text {
    padding-block: vars.$m;
  }
  a, p {
    word-wrap: break-word;
    word-break: break-word;
  }
}

.card-title {
  padding: vars.$m vars.$m vars.$xs;
  margin: 0;
  font-size: vars.$fs-m;
  color: #222;
  fill: #222;
  font-weight: 400;
}
.card-title a {
  line-height: 1;
}
.card-footer-link, button.card-footer-link  {
  display: block;
  padding: vars.$s vars.$m;
  line-height: 1;
  border-top: 1px solid;
  width: 100%;
  text-align: left;
  @include mixins.lightDark(border-color, #DDD, #555);
  border-radius: 0 0 3px 3px;
  font-size: 0.9em;
  margin-top: vars.$xs;
  &:hover {
    text-decoration: none;
    @include mixins.lightDark(background-color, #f2f2f2, #2d2d2d);
  }
  &:focus {
    @include mixins.lightDark(background-color, #eee, #222);
    outline: 1px dotted #666;
    outline-offset: -2px;
  }
}

.card.border-card {
  border: 1px solid;
  @include mixins.lightDark(border-color, #ddd, #000);
}

.card.drag-card {
  border: 1px solid #DDD;
  @include mixins.lightDark(border-color, #ddd, #000);
  @include mixins.lightDark(background-color, #fff, #333);
  border-radius: 4px;
  display: flex;
  padding: 0 0 0 (vars.$s + 28px);
  margin: vars.$s 0;
  position: relative;
  .drag-card-action {
    cursor: pointer;
  }
  .handle, .drag-card-action {
    display: flex;
    align-items: center;
    text-align: center;
    justify-content: center;
    width: 28px;
    flex-grow: 0;
    padding: 0 vars.$xs;
    &:hover {
      @include mixins.lightDark(background-color, #eee, #2d2d2d);
    }
    .svg-icon {
      margin-inline-end: 0px;
    }
  }
  .outline input {
    margin: vars.$s 0;
    width: 100%;
  }
  .outline {
    position: relative;
  }
  .handle {
    @include mixins.lightDark(background-color, #eee, #2d2d2d);
    left: 0;
    position: absolute;
    top: 0;
    bottom: 0;
  }
  > div {
    padding: 0 vars.$s;
    max-width: 80%;
    flex: 1;
  }
}

.grid-card {
  display: flex;
  flex-direction: column;
  border: 1px solid #ddd;
  @include mixins.lightDark(border-color, #ddd, #000);
  margin-bottom: vars.$l;
  border-radius: 4px;
  overflow: hidden;
  min-width: 100px;
  color: vars.$text-dark;
  transition: border-color ease-in-out 120ms, box-shadow ease-in-out 120ms;
  &:hover {
    color: vars.$text-dark;
    text-decoration: none;
    @include mixins.lightDark(box-shadow, vars.$bs-card, vars.$bs-card-dark);
  }
  h2 {
    width: 100%;
    font-size: 1.5em;
    margin: 0 0 10px;
  }
  p {
    font-size: .7rem;
    margin: 0;
    line-height: 1.6em;
  }
  .grid-card-content {
    flex: 1;
    border-top: 0;
    border-bottom-width: 2px;
  }
  .grid-card-content, .grid-card-footer {
    padding: vars.$l;
  }
  .grid-card-content + .grid-card-footer {
    padding-top: 0;
  }
}

.book-grid-item .grid-card-footer {
  p.small {
    font-size: .8em;
    margin: 0;
  }
}

.content-wrap.card {
  padding: vars.$m vars.$xxl;
  margin-inline-start: auto;
  margin-inline-end: auto;
  margin-bottom: vars.$l;
  overflow: initial;
  min-height: 60vh;
  border-radius: 8px;
  &.auto-height {
    min-height: 0;
  }
  &.fill-width {
    width: 100%;
  }
}
@include mixins.smaller-than(vars.$bp-xxl) {
  .content-wrap.card {
    padding: vars.$m vars.$xl;
  }
}
@include mixins.smaller-than(vars.$bp-m) {
  .content-wrap.card {
    padding: vars.$m vars.$l;
  }
}
@include mixins.smaller-than(vars.$bp-s) {
  .content-wrap.card {
    padding: vars.$m vars.$m;
  }
}

.sub-card {
  box-shadow: 0 1px 3px 0 rgba(0, 0, 0, 0.1);
  border: 1.5px solid;
  @include mixins.lightDark(border-color, #E2E2E2, #444);
  border-radius: 4px;
}

.outline-hover {
  border: 1px solid transparent !important;
  &:hover {
    border: 1px solid rgba(0, 0, 0, 0.1) !important;
  }
}

.fade-in-when-active {
  @include mixins.lightDark(opacity, 0.6, 0.7);
  transition: opacity ease-in-out 120ms;
  &:hover, &:focus-within {
    opacity: 1 !important;
  }
  @media (prefers-contrast: more) {
    opacity: 1 !important;
  }
}

/**
 * Tags
 */
.tag-item {
  display: inline-flex;
  margin-bottom: vars.$xs;
  margin-inline-end: vars.$xs;
  border-radius: 4px;
  border: 1px solid;
  overflow: hidden;
  font-size: 0.85em;
  @include mixins.lightDark(border-color, #CCC, #666);
  a, span, a:hover, a:active {
    padding: 4px 8px;
    @include mixins.lightDark(color, rgba(0, 0, 0, 0.7), rgba(255, 255, 255, 0.8));
    transition: background-color ease-in-out 80ms;
    text-decoration: none;
  }
  a:hover {
    @include mixins.lightDark(background-color, rgba(255, 255, 255, 0.7), rgba(255, 255, 255, 0.3));
  }
  svg {
    @include mixins.lightDark(fill, rgba(0, 0, 0, 0.5), rgba(255, 255, 255, 0.5));
  }
  .tag-value {
    border-inline-start: 1px solid;
    @include mixins.lightDark(border-color, #DDD, #666);
    @include mixins.lightDark(background-color, rgba(255, 255, 255, 0.5), rgba(255, 255, 255, 0.2))
  }
}

.tag-name.highlight, .tag-value.highlight {
  font-weight: bold;
}

.tag-list div:last-child .tag-item {
  margin-bottom: 0;
}

.item-list-row .tag-item {
  margin-bottom: 0;
}

/**
 * API Docs
 */
.api-method {
  font-size: 0.75rem;
  background-color: #888;
  padding: vars.$xs;
  line-height: 1.3;
  opacity: 0.7;
  vertical-align: top;
  border-radius: 3px;
  color: #FFF;
  display: inline-block;
  min-width: 60px;
  text-align: center;
  font-weight: bold;
  &[data-method="GET"] { background-color: #077b70 }
  &[data-method="POST"] { background-color: #cf4d03 }
  &[data-method="PUT"] { background-color: #0288D1 }
  &[data-method="DELETE"] { background-color: #ab0f0e }
}

.sticky-sidebar {
  position: sticky;
  top: vars.$m;
  max-height: calc(100vh - #{vars.$m});
  overflow-y: auto;
}
