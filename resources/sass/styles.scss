@use "sass:meta";

@use "reset";
@use "vars";
@use "mixins";
@use "spacing";
@use "opacity";
@use "html";
@use "text";
@use "colors";
@use "layout";
@use "blocks";
@use "buttons";
@use "tables";
@use "forms";
@use "animations";
@use "tinymce";
@use "editor";
@use "codemirror";
@use "components";
@use "header";
@use "footer";
@use "lists";
@use "pages";
@use "content";

@media print {
  @include meta.load-css("print");
}

// Jquery Sortable Styles
.dragged {
  position: absolute;
  opacity: 0.5;
  z-index: 2000;
}
body.dragging, body.dragging * {
  cursor: move !important;
}

// User Avatar Images
.avatar {
  border-radius: 100%;
  @include mixins.lightDark(background-color, #eee, #000);
  width: 30px;
  height: 30px;
  &.med {
    width: 40px;
    height: 40px;
  }
  &.large {
    width: 80px;
    height: 80px;
  }
  &.huge {
    width: 120px;
    height: 120px;
  }
  &.square {
    border-radius: 3px;
  }
  &[src$="user_avatar.png"] {
    @include mixins.whenDark {
      filter: invert(1);
    }
  }
}

// Loading icon
$loadingSize: 10px;
.loading-container {
  position: relative;
  display: block;
  margin: vars.$xl auto;
  > div {
    width: $loadingSize;
    height: $loadingSize;
    border-radius: $loadingSize;
    display: inline-block;
    vertical-align: top;
    transform: translate3d(-10px, 0, 0);
    margin-top: vars.$xs;
    animation-name: loadingBob;
    animation-duration: 1.4s;
    animation-iteration-count: infinite;
    animation-timing-function: cubic-bezier(.62, .28, .23, .99);
    margin-inline-end: 4px;
    background-color: var(--color-page);
    animation-delay: -300ms;
  }
  > div:first-child {
      left: -($loadingSize+vars.$xs);
      background-color: var(--color-book);
      animation-delay: -600ms;
  }
  > div:last-of-type {
    left: $loadingSize+vars.$xs;
    background-color: var(--color-chapter);
    animation-delay: 0ms;
  }
  > span {
    margin-inline-start: vars.$s;
    font-style: italic;
    color: #888;
    vertical-align: top;
  }
}

.inline.block .loading-container {
  margin: vars.$xs vars.$s;
}

.skip-to-content-link {
  position: fixed;
  top: -52px;
  left: 0;
  background-color: #FFF;
  z-index: 15;
  border-radius: 0 4px 4px 0;
  display: block;
  box-shadow: vars.$bs-dark;
  font-weight: bold;
  &:focus {
    top: vars.$xl;
    outline-offset: -10px;
    outline: 2px dotted var(--color-link);
  }
}

.entity-selector {
  border: 1px solid #DDD;
  @include mixins.lightDark(border-color, #ddd, #111);
  border-radius: 3px;
  overflow: hidden;
  font-size: 0.8em;
  input[type="text"] {
    width: 100%;
    display: block;
    border-radius: 0;
    border: 0;
    border-bottom: 1px solid #DDD;
    font-size: 16px;
    padding: vars.$s vars.$m;
  }
  input[type="text"]:focus {
    outline: 1px solid var(--color-primary);
    border-radius: 3px 3px 0 0;
    outline-offset: -1px;
  }
  .entity-list {
    overflow-y: scroll;
    height: 400px;
    @include mixins.lightDark(background-color, #eee, #222);
    margin-inline-end: 0;
    margin-inline-start: 0;
  }
  .entity-list-item {
    @include mixins.lightDark(background-color, #fff, #222);
  }
  .entity-list-item p {
    margin-bottom: 0;
  }
  .entity-list-item:focus {
    outline: 2px dotted var(--color-primary);
    outline-offset: -4px;
  }
  .entity-list-item.selected {
    @include mixins.lightDark(background-color, rgba(0, 0, 0, 0.05), rgba(255, 255, 255, 0.05));
  }
  .loading {
    height: 400px;
    padding-top: vars.$l;
  }
  &.compact {
    font-size: 10px;
    .entity-item-snippet {
      display: none;
    }
    h4 {
      font-size: 14px;
    }
  }
  &.small {
    .entity-list-item {
      padding: vars.$xs vars.$m;
    }
    .entity-list, .loading {
      height: 300px;
    }
    input[type="text"] {
      font-size: 13px;
      padding: vars.$xs vars.$m;
      height: auto;
    }
  }
}

.fullscreen {
  border:0;
  position:fixed;
  top:0;
  left:0;
  right:0;
  bottom:0;
  width:100%;
  height:100%;
  z-index: 150;
}

@include mixins.between(vars.$bp-s, vars.$bp-m) {
  #home-default > .grid.third {
    display: block;
    columns: 2;
    column-gap: vars.$l !important;
  }
}

.list-sort-container {
  display: inline-block;
  form {
    display: inline-block;
  }
  .list-sort {
    display: inline-grid;
    margin-inline-start: vars.$s;
    grid-template-columns: minmax(120px, max-content) 40px;
    font-size: 0.9rem;
    border: 2px solid #DDD;
    @include mixins.lightDark(border-color, #ddd, #444);
    border-radius: 4px;
  }
  .list-sort-label {
    font-weight: bold;
    display: inline-block;
    @include mixins.lightDark(color, #555, #888);
  }
  .list-sort-type {
    text-align: start;
  }
  .list-sort-type, .list-sort-dir {
    padding: vars.$xs vars.$s;
    cursor: pointer;
  }
  .list-sort-dir {
    border-inline-start: 2px solid #DDD;
    color: #888;
    @include mixins.lightDark(border-color, #ddd, #444);
    .svg-icon {
      transition: transform ease-in-out 120ms;
    }
    &:hover .svg-icon {
      transform: rotate(180deg);
    }
  }
}

.import-item {
  border-inline-start: 2px solid currentColor;
  padding-inline-start: vars.$xs;
}